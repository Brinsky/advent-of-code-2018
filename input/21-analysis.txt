#ip 5
(0)  seti 123 _ 2      [R2 = 123]        // R2 = 123            // R2 = 123
(1)  bani 2 456 2      [R2 &= 456]       // R2 &= 456           // do {
(2)  eqri 2 72 2       [R2 = (R2 == 72)] // if (R2 != 72) {     //   R2 &= 456
(3)  addr 2 5 5        [R5 += R2]        //   goto 1            // while (R2 != 72);
(4)  seti 0 _ 5        [R5 = 0]          // }                   // R2 = 0
(5)  seti 0 _ 2        [R2 = 0]          // R2 = 0              // do {
(6)  bori 2 65536 1    [R1 = R2 | 65536] // R1 = R2 | 65536     //   R1 = R2 | 65536
(7)  seti 1250634 _ 2  [R2 = 1250634]    // R2 = 1250634        //   R2 = 1250634
(8)  bani 1 255 4      [R4 = R1 & 255]   // R4 = R1 & 255       //   while (true) {
(9)  addr 2 4 2        [R2 += R4]        // R2 += R4            //     R4 = R1 & 255
(10) bani 2 16777215 2 [R2 &= 16777215]  // R2 &= 16777215      //     R2 += R4
(11) muli 2 65899 2    [R2 *= 65899]     // R2 *= 65899         //     R2 &= 16777215
(12) bani 2 16777215 2 [R2 &= 16777215]  // R2 &= 16777215      //     R2 *= 65899
(13) gtir 256 1 4      [R4 = (256 > R1)] // if (R1 < 256) {     //     R2 &= 16777215
(14) addr 4 5 5        [R5 += R4]        //   goto 28           //     if (R1 < 256) {
(15) addi 5 1 5        [R5++]            //                     //       break;
(16) seti 27 _ 5       [R5 = 27]         // }                   //     }
(17) seti 0 _ 4        [R4 = 0]          // R4 = 0              //     for (R4 = 0; (R4 + 1) * 256 <= R1; R4++);
(18) addi 4 1 3        [R3 = R4 + 1]     // R3 = (R4 + 1) * 256 //     // i.e. R1 /= 256
(19) muli 3 256 3      [R3 *= 256]       //                     //     R1 = R4
(20) gtrr 3 1 3        [R3 = (R3 > R1)]  // if (R3 > R1) {      //   }
(21) addr 3 5 5        [R5 += R3]        //   goto 26           // } while (R0 != R2);
(22) addi 5 1 5        [R5++]            // }
(23) seti 25 _ 5       [R5 = 25]         //
(24) addi 4 1 4        [R4++]            // R4++
(25) seti 17 _ 5       [R5 = 17]         // goto 18
(26) setr 4 _ 1        [R1 = R4]         // R1 = R4
(27) seti 7 _ 5        [R5 = 7]          // goto 8
(28) eqrr 2 0 4        [R4 = (R0 == R2)] // if (R0 != R2) {
(29) addr 4 5 5        [R5 += R4]        //   goto 6
(30) seti 5 _ 5        [R5 = 5]          // }
